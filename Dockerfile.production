# Production Dockerfile for Shoplifting Detection System
# Optimized for deployment with minimal size and maximum security

FROM python:3.10-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    libopencv-dev \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libatlas-base-dev \
    gfortran \
    wget \
    curl \
    git \
    supervisor \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create application user
RUN useradd --create-home --shell /bin/bash --uid 1000 shoplifter
USER shoplifter
WORKDIR /home/shoplifter

# Create virtual environment
RUN python -m venv /home/shoplifter/venv
ENV PATH="/home/shoplifter/venv/bin:$PATH"

# Upgrade pip
RUN pip install --upgrade pip setuptools wheel

# Copy requirements and install Python dependencies
COPY --chown=shoplifter:shoplifter requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Set working directory for application
WORKDIR /home/shoplifter/app

# Copy application code
COPY --chown=shoplifter:shoplifter main.py .
COPY --chown=shoplifter:shoplifter train_model.py .
COPY --chown=shoplifter:shoplifter assets/ ./assets/
COPY --chown=shoplifter:shoplifter data/models/ ./data/models/

# Create necessary directories
RUN mkdir -p \
    logs \
    evidence \
    models \
    data \
    config \
    static \
    uploads \
    backups

# Switch to root for final setup
USER root

# Create startup script
COPY deployment/scripts/startup-production.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh

# Create health check script
COPY deployment/scripts/healthcheck-production.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# Create log directories
RUN mkdir -p /var/log/shoplifting-detection && \
    chown -R shoplifter:shoplifter /var/log/shoplifting-detection

# Switch back to application user
USER shoplifter
WORKDIR /home/shoplifter/app

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/startup.sh"]

# Default command
CMD ["production"]
